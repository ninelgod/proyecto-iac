# Docker Compose for Veterinaria Goicochea - Development
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: veterinaria-db
    environment:
      POSTGRES_DB: veterinaria_goicochea
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - veterinaria-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: veterinaria-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - veterinaria-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: veterinaria-backend
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres123
      - DB_NAME=veterinaria_goicochea
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_jwt_secret_here
      - MERCADOPAGO_ACCESS_TOKEN=your_mp_access_token
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "4000:4000"
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - veterinaria-network
    restart: unless-stopped

  # Frontend Next.js
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: veterinaria-frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000/api
      - NEXT_PUBLIC_MERCADOPAGO_PUBLIC_KEY=your_mp_public_key
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - veterinaria-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: veterinaria-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - veterinaria-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  veterinaria-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16